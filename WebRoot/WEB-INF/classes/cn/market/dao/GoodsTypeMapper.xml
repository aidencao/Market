<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.market.dao.GoodsTypeMapper" >
  <resultMap id="BaseResultMap" type="cn.market.pojo.GoodsType" >
    <id column="goodsTypeId" property="goodstypeid" jdbcType="INTEGER" />
    <result column="goodsName" property="goodsname" jdbcType="VARCHAR" />
    <result column="goodsUnit" property="goodsunit" jdbcType="VARCHAR" />
    <result column="goodsSpec" property="goodsspec" jdbcType="VARCHAR" />
    <result column="purducerId" property="purducerid" jdbcType="INTEGER" />
    <result column="salePrice" property="saleprice" jdbcType="DOUBLE" />
    <result column="validDays" property="validdays" jdbcType="INTEGER" />
    <result column="other" property="other" jdbcType="VARCHAR" />
    <result column="pic" property="pic" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    goodsTypeId, goodsName, goodsUnit, goodsSpec, purducerId, salePrice, validDays, other, 
    pic
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.market.pojo.GoodsTypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods_type
    where goodsTypeId = #{goodstypeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods_type
    where goodsTypeId = #{goodstypeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.market.pojo.GoodsTypeExample" >
    delete from goods_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.market.pojo.GoodsType" >
    insert into goods_type (goodsTypeId, goodsName, goodsUnit, 
      goodsSpec, purducerId, salePrice, 
      validDays, other, pic
      )
    values (#{goodstypeid,jdbcType=INTEGER}, #{goodsname,jdbcType=VARCHAR}, #{goodsunit,jdbcType=VARCHAR}, 
      #{goodsspec,jdbcType=VARCHAR}, #{purducerid,jdbcType=INTEGER}, #{saleprice,jdbcType=DOUBLE}, 
      #{validdays,jdbcType=INTEGER}, #{other,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.market.pojo.GoodsType" >
    insert into goods_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodstypeid != null" >
        goodsTypeId,
      </if>
      <if test="goodsname != null" >
        goodsName,
      </if>
      <if test="goodsunit != null" >
        goodsUnit,
      </if>
      <if test="goodsspec != null" >
        goodsSpec,
      </if>
      <if test="purducerid != null" >
        purducerId,
      </if>
      <if test="saleprice != null" >
        salePrice,
      </if>
      <if test="validdays != null" >
        validDays,
      </if>
      <if test="other != null" >
        other,
      </if>
      <if test="pic != null" >
        pic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodstypeid != null" >
        #{goodstypeid,jdbcType=INTEGER},
      </if>
      <if test="goodsname != null" >
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="goodsunit != null" >
        #{goodsunit,jdbcType=VARCHAR},
      </if>
      <if test="goodsspec != null" >
        #{goodsspec,jdbcType=VARCHAR},
      </if>
      <if test="purducerid != null" >
        #{purducerid,jdbcType=INTEGER},
      </if>
      <if test="saleprice != null" >
        #{saleprice,jdbcType=DOUBLE},
      </if>
      <if test="validdays != null" >
        #{validdays,jdbcType=INTEGER},
      </if>
      <if test="other != null" >
        #{other,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        #{pic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.market.pojo.GoodsTypeExample" resultType="java.lang.Integer" >
    select count(*) from goods_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods_type
    <set >
      <if test="record.goodstypeid != null" >
        goodsTypeId = #{record.goodstypeid,jdbcType=INTEGER},
      </if>
      <if test="record.goodsname != null" >
        goodsName = #{record.goodsname,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsunit != null" >
        goodsUnit = #{record.goodsunit,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsspec != null" >
        goodsSpec = #{record.goodsspec,jdbcType=VARCHAR},
      </if>
      <if test="record.purducerid != null" >
        purducerId = #{record.purducerid,jdbcType=INTEGER},
      </if>
      <if test="record.saleprice != null" >
        salePrice = #{record.saleprice,jdbcType=DOUBLE},
      </if>
      <if test="record.validdays != null" >
        validDays = #{record.validdays,jdbcType=INTEGER},
      </if>
      <if test="record.other != null" >
        other = #{record.other,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null" >
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods_type
    set goodsTypeId = #{record.goodstypeid,jdbcType=INTEGER},
      goodsName = #{record.goodsname,jdbcType=VARCHAR},
      goodsUnit = #{record.goodsunit,jdbcType=VARCHAR},
      goodsSpec = #{record.goodsspec,jdbcType=VARCHAR},
      purducerId = #{record.purducerid,jdbcType=INTEGER},
      salePrice = #{record.saleprice,jdbcType=DOUBLE},
      validDays = #{record.validdays,jdbcType=INTEGER},
      other = #{record.other,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.market.pojo.GoodsType" >
    update goods_type
    <set >
      <if test="goodsname != null" >
        goodsName = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="goodsunit != null" >
        goodsUnit = #{goodsunit,jdbcType=VARCHAR},
      </if>
      <if test="goodsspec != null" >
        goodsSpec = #{goodsspec,jdbcType=VARCHAR},
      </if>
      <if test="purducerid != null" >
        purducerId = #{purducerid,jdbcType=INTEGER},
      </if>
      <if test="saleprice != null" >
        salePrice = #{saleprice,jdbcType=DOUBLE},
      </if>
      <if test="validdays != null" >
        validDays = #{validdays,jdbcType=INTEGER},
      </if>
      <if test="other != null" >
        other = #{other,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        pic = #{pic,jdbcType=VARCHAR},
      </if>
    </set>
    where goodsTypeId = #{goodstypeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.market.pojo.GoodsType" >
    update goods_type
    set goodsName = #{goodsname,jdbcType=VARCHAR},
      goodsUnit = #{goodsunit,jdbcType=VARCHAR},
      goodsSpec = #{goodsspec,jdbcType=VARCHAR},
      purducerId = #{purducerid,jdbcType=INTEGER},
      salePrice = #{saleprice,jdbcType=DOUBLE},
      validDays = #{validdays,jdbcType=INTEGER},
      other = #{other,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR}
    where goodsTypeId = #{goodstypeid,jdbcType=INTEGER}
  </update>
</mapper>